version: "3.9"

services:
  app:
    build:
      context: ./APP
      dockerfile: Dockerfile
    volumes:
      - ./APP/Front_End/static:/APP/Front_End/static
      - ./APP/Front_End/templates:/APP/Front_End/templates
      - ./utils:/utils
    expose:
      - "8000"
    networks:
      - app_network

  api-add_player:
    build:
      context: ./API-AP
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./API-AP:/API-AP
      - ./utils:/utils
    expose:
      - "8010"
    networks:
      - app_network
    depends_on:
      - data_base

  api-add_game:
    build:
      context: ./API-AG
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./API-AG:/API-AG
      - ./utils:/utils
    expose:
      - "8020"
    networks:
      - app_network
    depends_on:
      - data_base

  api-rules:
    build:
      context: ./API-RULES
      dockerfile: Dockerfile
    volumes:
      - ./API-RULES:/API-RULES
      - ./utils:/utils
      - ./kaggle/kaggle.json:/root/.config/kaggle/kaggle.json:ro
    ports:
      - "8030"
    networks:
      - app_network

  data_base:
    build:
      context: ./Data_Base
    container_name: Data_Base_Gabo
    environment:
      DB_HOST: data_base
      DB_DATABASE: Gabo_base
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./Data_Base/init.sql:/docker-entrypoint-initdb.d/init.sql
    tmpfs:
      - /var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      # start_period: 30s

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - app_network
    depends_on:
      - app
      - api-add_player
      - api-add_game

  backup:
    build:
      context: ./Backup
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./Backup/back_up:/Backup/back_up
      - ./utils:/utils
    ports:
      - "8080:8080"
    networks:
      - app_network
    depends_on:
      - data_base


networks:
  app_network:
    driver: bridge



